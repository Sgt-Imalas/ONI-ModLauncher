<UserControl x:Class="ONIModLauncher.ModListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ONIModLauncher"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="UserControl_Loaded"
             FontSize="14">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" BorderBrush="Black" BorderThickness="1">
            <DockPanel Background="{StaticResource DarkBrush}">

                <Grid DockPanel.Dock="Top" Background="{StaticResource PinkBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Margin="7,5,0,10" Foreground="White" FontSize="20" FontFamily="{StaticResource ONIFont}">Mod List</Label>

                    <Button x:Name="saveModListButton" Grid.Column="1" Margin="0,3,3,5" Style="{StaticResource BlueButton}" FontSize="16" Width="100"
                                        Click="saveModListButton_Click">Save List</Button>
                    <Button x:Name="loadModListButton" Grid.Column="2" Margin="0,3,3,5" Style="{StaticResource BlueButton}" FontSize="16" Width="100"
                                        Click="loadModListButton_Click">Load List</Button>
                    <Button x:Name="refreshModsButton" Grid.Column="3" Margin="0,3,3,5" Style="{StaticResource BlueButton}" FontSize="16" Width="100"
                                        Click="refreshModsButton_Click">Refresh</Button>
                </Grid>

                <Grid DockPanel.Dock="Top" Background="{StaticResource LightBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Margin="5,0,10,0" VerticalAlignment="Center"
                                   FontSize="16" Foreground="Black"
                                   Text="Search:"/>

                        <TextBox x:Name="searchBox" Grid.Column="1" Margin="3" Padding="3" BorderThickness="1" BorderBrush="Black"
                                 FontSize="16"
                                 TextChanged="SearchBox_OnTextChanged"/>

                        <TextBlock Grid.Column="2" Margin="10,0,10,0" VerticalAlignment="Center"
                                   FontSize="16" Foreground="Black"
                                   Text="Folder:"/>

                        <ComboBox x:Name="modTypeComboBox" Grid.Column="3" Width="80" Margin="3" VerticalContentAlignment="Center"
                                  SelectedIndex="0"
                                  SelectionChanged="ModTypeComboBox_OnSelectionChanged">
                            <ComboBoxItem>All</ComboBoxItem>
                            <ComboBoxItem>Dev</ComboBoxItem>
                            <ComboBoxItem>Local</ComboBoxItem>
                            <ComboBoxItem>Steam</ComboBoxItem>
                        </ComboBox>

                        

                        
                    </Grid>

                    <Grid Grid.Row="1" Height="30">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="1" Margin="10,0,0,0" Width="46" VerticalAlignment="Center" FontSize="14">Base</Label>
                        <Label Grid.Column="2" Margin="5,0,0,0" Width="46" VerticalAlignment="Center" FontSize="14">DLC</Label>
                        <Label Grid.Column="3" Margin="10,0,0,0" VerticalAlignment="Center" FontSize="14">Title</Label>
                    </Grid>
                </Grid>

                

                <ListView x:Name="modsList" BorderThickness="0" Padding="0,1,0,0" HorizontalContentAlignment="Stretch"
                          Background="{StaticResource DarkBrush}" ScrollViewer.CanContentScroll="False"
                          dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True">
                    <ListView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Yellow"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Yellow"/>
                    </ListView.Resources>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Yellow"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="border" BorderThickness="1" BorderBrush="Black" CornerRadius="3" Background="{StaticResource BlueBrush}" Margin="0" Padding="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Grid.Column="0" Orientation="Horizontal">

                                        <Image Source="/Assets/dragger.png" Width="32"
                                               Visibility="{Binding Path=IsEditable, Converter={StaticResource BoolToVis}}"
                                               ToolTip="Drag to reorder"/>

                                        <TextBox Width="48" Height="36" Margin="5"
                                                 Visibility="Collapsed"
                                                 HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                                 FontSize="16"
                                                 Text="0"/>

                                        <CheckBox Margin="5"
                                                  IsEnabled="{Binding CanEditEnabled, Mode=OneWay}"
                                                  IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  ToolTip="Enable"/>

                                        <TextBlock x:Name="titleText" Margin="10,0,0,0" VerticalAlignment="Center"
                                                   FontFamily="{StaticResource ONIFont}" FontSize="18" TextOptions.TextFormattingMode="Display"
                                                   Foreground="{Binding TitleColor, Converter={StaticResource ColorToBrush}}"
                                                   Text="{Binding Path=Title}"/>
                                        <Label Foreground="White" VerticalAlignment="Center" Visibility="{Binding IsLocal, Mode=OneWay, Converter={StaticResource BoolToVis}}">[local]</Label>
                                        <Label Foreground="White" VerticalAlignment="Center" Visibility="{Binding IsDev, Mode=OneWay, Converter={StaticResource BoolToVis}}">[dev]</Label>
                                        <Label Foreground="White" VerticalAlignment="Center" Visibility="{Binding KeepEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}}">[keep]</Label>
										<Label Foreground="White" VerticalAlignment="Center" Visibility="{Binding IsBroken, Mode=OneWay, Converter={StaticResource BoolToVis}}">[broken]</Label>
										<Label Foreground="White" VerticalAlignment="Center" Visibility="{Binding ParsedLegacyCompatibility, Mode=OneWay, Converter={StaticResource BoolToVis}}">[old yaml]</Label>

                                    </StackPanel>

                                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                                        <Button Margin="5,0" Height="38"
                                                Style="{StaticResource PinkButton}" FontSize="16" Width="80"
                                                Visibility="{Binding HasConfig, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                                ToolTip="Open config file"
                                                Command="{Binding OpenConfigCommand}">Config</Button>
                                        <Button Margin="5,0" Height="38"
                                                Style="{StaticResource ImageButton}"
                                                Visibility="{Binding IsSteam, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                                ToolTip="Open Workshop page"
                                                Command="{Binding OpenWorkshopCommand}">
                                            <Image Source="/Assets/workshop_icon.png" Height="36"
                                                   RenderOptions.BitmapScalingMode="HighQuality"/>
                                        </Button>
                                        <Button Margin="5,0" Height="38"
                                                Style="{StaticResource ImageButton}"
                                                BorderThickness="0"
                                                Visibility="{Binding RepoIsGithub, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                                ToolTip="Open Github Repo"
                                                Command="{Binding OpenRepoCommand}">
                                            <Image Source="/Assets/github-mark-white.png" Height="36"
                                                   RenderOptions.BitmapScalingMode="HighQuality"/>
                                        </Button>
                                        <Button FontSize="16" Margin="5,0" Width="38" Height="38"
                                                Style="{StaticResource BlueButton}"
                                                ToolTip="Open mod folder"
                                                Command="{Binding OpenFolderCommand}">&#x1F4C1;</Button>
                                    </StackPanel>
                                </Grid>
                                <Border.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Toggle Keep" Click="ToggleKeepEnabledMenuItem_OnClick"/>
										<MenuItem Header="Toggle Broken" Click="ToggleBrokenMenuItem_OnClick"></MenuItem>
										<MenuItem Header="Toggle Pending"
                                                  IsEnabled="{Binding IsNotEditable}"
                                                  Click="TogglePendingMenuItem_OnClick"/>
										<MenuItem Header="Move to Top"
                                                  IsEnabled="{Binding IsEditable}"
                                                  Click="MoveToTopMenuItem_OnClick"/>
                                        <MenuItem Header="Move to Bottom"
                                                  IsEnabled="{Binding IsEditable}"
                                                  Click="MoveToBottomMenuItem_OnClick"/>
                                    </ContextMenu>
                                </Border.ContextMenu>
                            </Border>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsDev}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource YellowBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsBroken}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource RedBrush}"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource LightBlueBrush}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsDev}" Value="True"/>
                                        <Condition Binding="{Binding ElementName=border, Path=IsMouseOver}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource LightYellowBrush}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsBroken}" Value="True"/>
                                        <Condition Binding="{Binding ElementName=border, Path=IsMouseOver}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource LightRedBrush}"/>
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </DockPanel>
        </Border>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button x:Name="selectAllModsButton" Margin="0,10,0,0" Width="100" Height="30"
                    FontSize="16" Style="{StaticResource BlueButton}"
                    Content="Enable All"
                    Click="selectAllModsButton_Click"/>
            <Button x:Name="unselectAllModsButton" Margin="10,10,0,0" Width="100" Height="30"
                    FontSize="16" Style="{StaticResource OrangeButton}"
                    Content="Disable All"
                    Click="unselectAllModsButton_Click"/>
            <Button x:Name="sortModsButton" Margin="10,10,0,0" Width="100" Height="30"
                    FontSize="16" Style="{StaticResource GreenButton}"
                    Content="Smart Sort"
                    ToolTip="This re-orders the mods to group together pinned, dev, local, steam, and broken mods in that order."
                    Click="sortModsButton_Click"/>
            <Button x:Name="bisectTopButton" Margin="10,10,0,0" Width="120" Height="30"
                    FontSize="16" Style="{StaticResource OrangeButton}"
                    Content="Bisect Upper"
                    ToolTip="Disables the lower half of currently enabled mods for crash diagnostic purposes."
                    Click="BisectTopButton_OnClick"/>
            <Button x:Name="bisectBottomButton" Margin="10,10,0,0" Width="120" Height="30"
                    FontSize="16" Style="{StaticResource OrangeButton}"
                    Content="Bisect Lower"
                    ToolTip="Disables the upper half of currently enabled mods for crash diagnostic purposes."
                    Click="BisectBottomButton_OnClick"/>
        </StackPanel>

        <Border x:Name="modListLockScreen" Visibility="Collapsed" Grid.RowSpan="2" Background="Black" Opacity="0.9">
            <Grid>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="20" FontFamily="{StaticResource ONIFont}">Mod list cannot be changed while the game is running.</Label>
                    <Button Margin="10" Width="120" Height="30"
                            Style="{StaticResource BlueButton}"
                            Content="Hide"
                            Click="HideGameRunningWarningBtn_Click"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
